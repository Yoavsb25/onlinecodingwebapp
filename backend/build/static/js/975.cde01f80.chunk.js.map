{"version":3,"file":"static/js/975.cde01f80.chunk.js","mappings":"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","sources":["components/hooks/useCodeSocket.js","components/utils/codeExecutor.js","components/reducers/codeBlockReducer.js","components/CodeEditor.js","components/OutputPanel.js","components/Header.js","components/ErrorDisplay.js","components/LoadingSpinner.js","components/CodeBlockPage.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { io } from 'socket.io-client';\n\nexport const useCodeSocket = (backendUrl, roomId, onCodeUpdate, onUserCountUpdate, onSolutionMatched) => {\n  const [socketState, setSocketState] = useState({\n    socket: null,\n    connected: false,\n    error: null\n  });\n\n  useEffect(() => {\n    const socket = io(backendUrl, {\n      transports: ['websocket'],\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n    });\n\n    const handleConnect = () => {\n      setSocketState(prev => ({ ...prev, connected: true, error: null }));\n      socket.emit('join', { room: `code-block-${roomId}` });\n    };\n\n    const handleDisconnect = () => {\n      setSocketState(prev => ({ ...prev, connected: false }));\n    };\n\n    const handleError = (error) => {\n      setSocketState(prev => ({ ...prev, error: error.message }));\n    };\n\n    socket.on('connect', handleConnect);\n    socket.on('disconnect', handleDisconnect);\n    socket.on('error', handleError);\n    socket.on('code_update', onCodeUpdate);\n    socket.on('solution_matched', () => onSolutionMatched(true));  // Update if the solution is matched\n    socket.on('user_joined', () => onUserCountUpdate(prev => prev + 1));\n    socket.on('user_left', () => onUserCountUpdate(prev => Math.max(1, prev - 1)));\n\n    setSocketState(prev => ({ ...prev, socket }));\n\n    return () => {\n      if (socket) {\n        socket.emit('leave', { room: `code-block-${roomId}` });\n        socket.disconnect();\n      }\n    };\n  }, [backendUrl, roomId, onCodeUpdate, onUserCountUpdate, onSolutionMatched]);\n\n  const emitCodeChange = useCallback((code) => {\n    if (socketState.socket && socketState.connected) {\n      socketState.socket.emit('code_change', {\n        room: `code-block-${roomId}`,\n        code,\n      });\n    }\n  }, [socketState.socket, socketState.connected, roomId]);\n\n  return { ...socketState, emitCodeChange };\n};\n","export const executeCode = async (code, solution, timeout = 5000) => {\n  try {\n    if (!code || !code.trim()) {\n      return {\n        success: false,\n        output: 'No code to execute'\n      };\n    }\n\n    // Normalize the code and solution before comparison\n    const normalizedCode = normalizeCode(code);\n    const normalizedSolution = normalizeCode(solution);\n\n    // Create a console capture mechanism\n    let capturedOutput = [];\n    const mockConsole = {\n      log: (...args) => {\n        capturedOutput.push(\n          args.map(arg =>\n            typeof arg === 'object' ? JSON.stringify(arg) : String(arg)\n          ).join(' ')\n        );\n      },\n      error: (...args) => {\n        capturedOutput.push(\n          'Error: ' + args.map(arg =>\n            typeof arg === 'object' ? JSON.stringify(arg) : String(arg)\n          ).join(' ')\n        );\n      }\n    };\n\n    // Execute the code with our mocked console\n    const evaluationResult = new Function('console', code)(mockConsole);\n\n    // Get the final output\n    const output = capturedOutput.length > 0\n      ? capturedOutput.join('\\n')\n      : (evaluationResult !== undefined ? String(evaluationResult) : 'Code executed successfully');\n\n    // Compare normalized code with solution\n    const isCorrect = normalizedCode === normalizedSolution;\n\n    console.log('Code comparison:', {\n      normalizedCode,\n      normalizedSolution,\n      isCorrect\n    });\n\n    return {\n      success: isCorrect,\n      output: output\n    };\n  } catch (error) {\n    return {\n      success: false,\n      output: `Error: ${error.message}`\n    };\n  }\n};\n\n// Helper function to normalize code for comparison\nexport const normalizeCode = (code) => {\n  if (!code) return '';\n  return code\n    .replace(/\\s+/g, ' ')  // Replace multiple spaces with a single space\n    .replace(/\\n+/g, '\\n')  // Replace multiple newlines with a single newline\n    .trim();  // Trim any leading or trailing whitespace\n};","export const initialState = {\n  loading: true,\n  error: null,\n  code: '',\n  solution: '',\n  name: '',\n  output: '',\n  isRunning: false,\n  isSolved: undefined,\n  userCount: 1,\n  question: ''\n};\n\nexport function codeBlockReducer(state, action) {\n  switch (action.type) {\n    case 'SET_CODE_BLOCK':\n      return {\n        ...state,\n        loading: false,\n        name: action.payload.name,\n        code: action.payload.content,\n        solution: action.payload.solution,\n      };\n    case 'SET_CODE':\n      return { ...state, code: action.payload };\n    case 'SET_OUTPUT':\n      return { ...state, output: action.payload };\n    case 'SET_RUNNING':\n      return { ...state, isRunning: action.payload };\n    case 'SET_IS_SOLVED':\n      return { ...state, isSolved: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload, loading: false };\n    case 'UPDATE_USER_COUNT':\n      return { ...state, userCount: action.payload };\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { Play, Check, X } from 'lucide-react';\n\nconst CodeEditor = React.memo(({ code, onChange, onRun, isRunning, isSolved }) => {\n  return (\n    <div className=\"relative\">\n      <div className=\"rounded-lg overflow-hidden shadow-2xl bg-gray-800\">\n        <CodeMirror\n          value={code}\n          height=\"400px\"\n          theme={oneDark}\n          extensions={[javascript()]}\n          onChange={onChange}\n          className=\"text-base\"\n        />\n        <div className=\"p-4 border-t border-gray-700 flex justify-between items-center\">\n          <button\n            onClick={onRun}\n            disabled={isRunning}\n            className=\"flex items-center px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <Play className=\"mr-2\" size={16} />\n            {isRunning ? 'Running...' : 'Run Code'}\n          </button>\n\n          {isSolved !== undefined && (\n            <div className=\"flex items-center\">\n              {isSolved ? (\n                <div className=\"flex items-center text-green-400\">\n                  <Check size={24} className=\"mr-2\" />\n                  <span>Correct solution!</span>\n                </div>\n              ) : (\n                <div className=\"flex items-center text-red-400\">\n                  <X size={24} className=\"mr-2\" />\n                  <span>Try again</span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default CodeEditor;\n\nconst OutputPanel = React.memo(({ output, isSolved }) => (\n  <div className=\"rounded-lg overflow-hidden shadow-2xl bg-gray-800\">\n    <div className=\"p-4 border-b border-gray-700 flex justify-between items-center\">\n      <h2 className=\"text-lg font-semibold\">Output</h2>\n      {isSolved !== undefined && (\n        <div className=\"text-4xl\" role=\"img\" aria-label={isSolved ? \"Success\" : \"Try Again\"}>\n          {isSolved ? \"😊\" : \"😔\"}\n        </div>\n      )}\n    </div>\n    <div className=\"p-4 font-mono text-sm h-[400px] overflow-auto whitespace-pre-wrap\">\n      {output || 'No output yet. Run your code to see results.'}\n    </div>\n  </div>\n));\n\nexport { OutputPanel };","import React from 'react';\n\nconst OutputPanel = React.memo(({ output, isSolved }) => (\n  <div className=\"rounded-lg overflow-hidden shadow-2xl bg-gray-800\">\n    <div className=\"p-4 border-b border-gray-700 flex justify-between items-center\">\n      <h2 className=\"text-lg font-semibold\">Output</h2>\n      {isSolved !== undefined && (\n        <div className=\"text-4xl\" role=\"img\" aria-label={isSolved ? \"Success\" : \"Try Again\"}>\n          {isSolved ? \"😊\" : \"😔\"}\n        </div>\n      )}\n    </div>\n    <div className=\"p-4 font-mono text-sm h-[400px] overflow-auto whitespace-pre-wrap\">\n      {output || 'No output yet. Run your code to see results.'}\n    </div>\n  </div>\n));\n\nexport default OutputPanel ;","// src/components/Header/Header.js\nimport React from 'react';\nimport { Users, CheckCircle, AlertCircle, ArrowLeft } from 'lucide-react';\n\nconst Header = React.memo(({ onBack, userCount, connected, name, role }) => (\n  <div>\n    <div className=\"flex items-center justify-between mb-6\">\n      <button\n        onClick={onBack}\n        className=\"flex items-center text-gray-400 hover:text-white transition-colors\"\n      >\n        <ArrowLeft className=\"mr-2\" size={20} />\n        Back to Lobby\n      </button>\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"flex items-center text-gray-400\">\n          <Users className=\"mr-2\" size={20} />\n          {userCount} user{userCount !== 1 ? 's' : ''} online\n        </div>\n        {connected ? (\n          <div className=\"flex items-center text-green-400\">\n            <CheckCircle className=\"mr-2\" size={20} />\n            Connected\n          </div>\n        ) : (\n          <div className=\"flex items-center text-red-400\">\n            <AlertCircle className=\"mr-2\" size={20} />\n            Disconnected\n          </div>\n        )}\n        {role && (\n          <div\n            className={`flex items-center ${\n              role === 'mentor' ? 'text-yellow-400' : 'text-blue-400'\n            }`}\n          >\n            {role === 'mentor' ? '👨‍🏫 Mentor' : '👩‍💻 Student'}\n          </div>\n        )}\n      </div>\n    </div>\n    <div className=\"mb-6\">\n      <h1 className=\"text-3xl font-bold mb-2\">{name}</h1>\n    </div>\n  </div>\n));\n\nexport default Header;","// src/components/ErrorDisplay.js\nimport React from 'react';\n\nconst ErrorDisplay = ({ error }) => {\n  return (\n    <div className=\"flex justify-center items-center min-h-screen bg-red-600 text-white\">\n      <div className=\"text-center p-4 border rounded-lg shadow-lg bg-red-700\">\n        <h2 className=\"text-2xl font-bold mb-4\">Oops! Something went wrong.</h2>\n        <p>{error}</p>\n        <p className=\"mt-4\">Please try again later or contact support if the issue persists.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorDisplay;\n","// src/components/LoadingSpinner.js\nimport React from 'react';\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"flex justify-center items-center min-h-screen\">\n      <div className=\"spinner-border animate-spin inline-block w-8 h-8 border-4 border-t-transparent border-blue-500 rounded-full\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { useReducer, useCallback, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useCodeSocket } from './hooks/useCodeSocket';\nimport { executeCode } from './utils/codeExecutor';\nimport { codeBlockReducer, initialState } from './reducers/codeBlockReducer';\nimport CodeEditor from './CodeEditor';\nimport OutputPanel from './OutputPanel';\nimport Header from './Header';\nimport ErrorDisplay from \"./ErrorDisplay\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'http://127.0.0.1:5000';\n\nfunction CodeBlockPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [state, dispatch] = useReducer(codeBlockReducer, {\n    ...initialState,\n    isSolved: undefined,\n    role: 'student'\n  });\n\n  const handleCodeUpdate = useCallback(({ code }) => {\n    dispatch({ type: 'SET_CODE', payload: code });\n  }, []);\n\n  const handleUserCountUpdate = useCallback((updateFn) => {\n    dispatch({ type: 'UPDATE_USER_COUNT', payload: updateFn });\n  }, []);\n\n  const { connected, error: socketError, emitCodeChange } = useCodeSocket(\n    BACKEND_URL,\n    id,\n    handleCodeUpdate,\n    handleUserCountUpdate\n  );\n\n  useEffect(() => {\n    const fetchCodeBlock = async () => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/code-blocks/${id}`);\n        if (!response.ok) throw new Error('Failed to fetch code block');\n        const data = await response.json();\n        dispatch({type: 'SET_CODE_BLOCK', payload: data })\n      } catch (err) {\n        dispatch({ type: 'SET_ERROR', payload: err.message });\n      }\n    };\n\n    fetchCodeBlock();\n  }, [id]);\n\n  const handleChange = useCallback((value) => {\n    dispatch({ type: 'SET_CODE', payload: value });\n    emitCodeChange(value);\n  }, [emitCodeChange]);\n\n  const runCode = useCallback(async () => {\n  dispatch({ type: 'SET_RUNNING', payload: true });\n\n  try {\n    const { output, success } = await executeCode(state.code, state.solution);\n    dispatch({ type: 'SET_OUTPUT', payload: output });\n    dispatch({ type: 'SET_IS_SOLVED', payload: success });\n\n    // Remove comments from code and solution\n    const removeComments = (code) => {\n      // Remove single-line comments\n      const noSingleLineComments = code.replace(/\\/\\/.*$/gm, '');\n\n      // Remove multi-line comments\n      const noComments = noSingleLineComments.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\n      // Remove leading/trailing whitespace and empty lines\n      return noComments.replace(/^\\s*[\\r\\n]/gm, '').trim();\n    };\n\n    const cleanCode = removeComments(state.code);\n    const cleanSolution = removeComments(state.solution);\n\n    // Compare cleaned code\n    const codeMatches = cleanCode === cleanSolution;\n    dispatch({ type: 'SET_IS_SOLVED', payload: codeMatches });\n\n    console.log('Code execution result:', { output, success, codeMatches });\n  } catch (error) {\n    dispatch({ type: 'SET_OUTPUT', payload: `Error: ${error.message}` });\n    dispatch({ type: 'SET_IS_SOLVED', payload: false });\n  } finally {\n    dispatch({ type: 'SET_RUNNING', payload: false });\n  }\n}, [state.code, state.solution]);\n\n  if (state.loading) {\n    return <LoadingSpinner />;\n  }\n\n  if (state.error) {\n    return <ErrorDisplay error={state.error} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <Header\n          onBack={() => navigate('/')}\n          userCount={state.userCount}\n          connected={connected}\n          name={state.name}\n          role={state.role}\n        />\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n          <CodeEditor\n            code={state.code}\n            onChange={handleChange}\n            onRun={runCode}\n            isRunning={state.isRunning}\n            isSolved={state.isSolved}\n          />\n\n          <OutputPanel\n            output={state.output}\n            isSolved={state.isSolved}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CodeBlockPage;"],"names":["normalizeCode","code","replace","trim","initialState","loading","error","solution","name","output","isRunning","isSolved","undefined","userCount","question","codeBlockReducer","state","action","type","payload","content","React","_ref","onChange","onRun","_jsx","className","children","_jsxs","CodeMirror","value","height","theme","oneDark","extensions","javascript","onClick","disabled","Play","size","Check","X","role","onBack","connected","ArrowLeft","Users","CheckCircle","AlertCircle","LoadingSpinner","BACKEND_URL","process","id","useParams","navigate","useNavigate","dispatch","useReducer","handleCodeUpdate","useCallback","handleUserCountUpdate","updateFn","socketError","emitCodeChange","useCodeSocket","backendUrl","roomId","onCodeUpdate","onUserCountUpdate","onSolutionMatched","socketState","setSocketState","useState","socket","useEffect","io","transports","reconnection","reconnectionAttempts","reconnectionDelay","on","handleConnect","prev","emit","room","handleDisconnect","message","Math","max","disconnect","async","response","fetch","ok","Error","data","json","err","fetchCodeBlock","handleChange","runCode","success","normalizedCode","normalizedSolution","capturedOutput","mockConsole","log","_len","arguments","length","args","Array","_key","push","map","arg","JSON","stringify","String","join","_len2","_key2","evaluationResult","Function","isCorrect","console","executeCode","removeComments","cleanCode","codeMatches","ErrorDisplay","Header","CodeEditor","OutputPanel"],"sourceRoot":""}